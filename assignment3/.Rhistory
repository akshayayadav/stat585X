dunif( min = 0, max = 1, log = FALSE)
runif(100, min = 0, max = 1)
uniform<-runif(5000, min = 0, max = 1)
X_dist<-exp(uniform)
hist(X_dist)
hist(X_dist,probability = !freq)
hist(X_dist,probability = TRUE)
hist(X_dist,probability = TRUE,breaks=1000)
hist(X_dist,probability = TRUE,breaks=500)
hist(X_dist,probability = TRUE,breaks=100)
uniform<-runif(500000, min = 0, max = 1)
X_dist<-exp(uniform)
hist(X_dist,probability = TRUE,breaks=100)
uniform<-runif(5000, min = 0, max = 1)
X_dist<-exp(uniform)
hist(X_dist,probability = TRUE,breaks=100)
uniform<-runif(5000000, min = 0, max = 1)
X_dist<-exp(uniform)
hist(X_dist,probability = TRUE,breaks=100)
uniform<-runif(5000, min = 0, max = 1)
X_dist<-exp(uniform)
hist(X_dist,probability = TRUE,breaks=100)
unif()
runif()
runif(1)
runif(2)
-runif(2)
length(-runif(2))
x_arr<-()
while(length(x_arr)<=5000){
x_sam<-1*log(runif(1))
u<-runif(1)
q_x<-e^-x_sam/(1+x_sam^2)
g1_x<-e^-x_sam
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
x_arr<-numeric()
x_arr<-numeric()
while(length(x_arr)<=5000){
x_sam<-1*log(runif(1))
u<-runif(1)
q_x<-e^-x_sam/(1+x_sam^2)
g1_x<-e^-x_sam
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<=5000){
x_sam<-1*log(runif(1))
u<-runif(1)
q_x<-e^-x_sam/(1+x_sam^2)
g1_x<-e^-x_sam
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
hist(x_arr,probability = TRUE,freq=NULL,breaks=100)
hist(x_arr,probability = TRUE,freq=FALSE,breaks=100)
hist(x_arr,probability = TRUE,freq=FALSE,breaks=100)
hist(x_arr,probability = TRUE,freq=FALSE,breaks=100)
ist(x_arr,freq=FALSE,breaks=100)
hist(x_arr,freq=FALSE,breaks=100)
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<=5000){
x_sam<-1*log(runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<log(runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(-runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(1-runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(1-runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
hist(x_arr,probability = TRUE,breaks=100)
hist(x_arr,probability = TRUE,breaks=100)
hist(x_arr,freq = TRUE,breaks=100)
hist(x_arr,probability = TRUE,breaks=100)
hist(x_arr,probability = TRUE,breaks=100)
hist(x_arr,probability = TRUE,breaks=1000)
hist(x_arr,probability = TRUE,breaks=10)
hist(x_arr,freq = FALSE,breaks=10)
hist(x_arr,freq = FALSE,breaks=10)
h <- hist(x_arr, breaks = 1000, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h)
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h)
uniform<-runif(5000, min = 0, max = 1)
X_dist<-exp(2.303*uniform)
h <- hist(X_dist, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h)
uniform<-runif(5000, min = 0, max = 1)
X_dist<-exp(2.303*uniform)
h <- hist(X_dist, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability")
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(1-runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability")
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(1-runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)")
x_arr<-numeric()
e<-exp(1)
while(length(x_arr)<5000){
x_sam<-1*log(1-runif(1))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
x_arr<-numeric()
e<-exp(1)
f_5=0.993
while(length(x_arr)<5000){
x_sam<-1*log(1-(0.993*runif(1)))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
uniform<-runif(5000, min = 0, max = 1)
X_dist<-exp(2.303*uniform)
h <- hist(X_dist, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
x_arr<-numeric()
e<-exp(1)
f_5=0.993
while(length(x_arr)<5000){
x_sam<-1*log(1-(0.993*runif(1)))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
X_dist<-exp(2.303*runif(5000, min = 0, max = 1))
h <- hist(X_dist, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
x_sam<-exp(2.303*runif(5000, min = 0, max = 1))
h <- hist(x_sam, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
x_sam<-exp(2.303*runif(5000))
h <- hist(x_sam, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
x_sam<-1*log(1-(0.993*runif(5000)))
h <- hist(x_sam, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="g1(x)",main="g1(x)")
x_arr<-numeric()
e<-exp(1)
f_5=0.993
while(length(x_arr)<5000){
x_sam<--1*log(1-(0.993*runif(1)))
u<-runif(1)
q_x<-(e^-x_sam)/(1+x_sam^2)
g1_x<-(e^-x_sam)
if(u < q_x/g1_x){
x_arr<-c(x_arr,x_sam)
}
}
h <- hist(x_arr, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="f(x)",main="f(x)")
x_arr>5
x_arr[x_arr>5]
x_sam<--1*log(1-(0.993*runif(5000)))
h <- hist(x_sam, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="g1(x)",main="g1(x)")
pi
x_sam<-tan((pi*(0.993*runif(5000)))/2)
h <- hist(x_sam, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="g2(x)",main="g2(x)")
2/pi
2/(26*pi)
(2*atan(0))/pi
(2*atan(5))/pi
f_5<-(2*atan(5))/pi
f_0<-(2*atan(0))/pi
lim<-f_0+(f_5-f_0)
x_sam<-tan((pi*(lim*runif(5000)))/2)
h <- hist(x_sam, breaks = 100, plot=FALSE)
h$counts=h$counts/sum(h$counts)
plot(h,ylab="Probability",xlab="g2(x)",main="g2(x)")
setwd("~/courses/stat585X/assignment3")
knitr::opts_chunk$set(echo = TRUE, message=FALSE)
library(tidyverse)
library(ggplot2)
get_unique_values<-function(x){
u_len<-length(unique(x[!is.na(x)]))
if(u_len==0){
return("NA")
}else if(u_len==2){
return(paste(unique(x[!is.na(x)]),collapse=","))
} else {
return(unique(x[!is.na(x)]))
}
}
read_exam_data <- function(file="Spreadsheets/FileOne.xlsx", sem=1, exam=1){
score_table<-readxl::read_excel(path=file, sheet=sem)
names(score_table)[1]<-"id"
names(score_table)[2]<-"scoretype"
colnames(score_table) <- tolower(colnames(score_table))
score_table <- score_table %>% select(id, scoretype, starts_with("gen"),
starts_with("treatme"),
starts_with("charac"),
starts_with("tot"),
starts_with("norm"))
names(score_table)<- c("id", "scoretype", "gender",
"treat1", "treat2",
"characteristic",
"total","normchange")
uval_table<-score_table %>% group_by(id) %>%
select(id,normchange,gender,treat1,treat2,characteristic) %>%
summarise(gender=get_unique_values(unique(gender[!is.na(gender)])),
normchange=get_unique_values(unique(normchange[!is.na(normchange)])),
characteristic=get_unique_values(unique(characteristic[!is.na(characteristic)])),
treat1=get_unique_values(unique(treat1[!is.na(treat1)])),
treat2=get_unique_values(unique(treat2[!is.na(treat2)])))
nuval_table<-score_table %>% select(id,scoretype,total)
new_score_table<-full_join(uval_table,nuval_table,by="id")
new_score_table$semester<-rep(sem,dim(new_score_table)[1])
new_score_table$exam<-rep(exam,dim(new_score_table)[1])
return(new_score_table)
}
master_table<-read_exam_data(file="Spreadsheets/FileOne.xlsx", sem=1, exam=1)
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileOne.xlsx", sem=2, exam=1))
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileOne.xlsx", sem=3, exam=1))
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileOne.xlsx", sem=4, exam=1))
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileTwo.xlsx", sem=1, exam=2))
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileTwo.xlsx", sem=2, exam=2))
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileTwo.xlsx", sem=3, exam=2))
master_table<-rbind(master_table,read_exam_data(file="Spreadsheets/FileTwo.xlsx", sem=4, exam=2))
length(unique(master_table$id))
master_table$id <- ifelse(as.numeric(master_table$id) >= 41000, as.numeric(master_table$id) - 1000,
as.numeric(master_table$id))
length(unique(master_table$id))
View(master_table)
master_table<-data.frame(lapply(master_table, function(v) {
if (is.character(v)) return(tolower(v))
else return(v)
}))
length(unique(master_table$id))
master_table$gender<-as.factor(master_table$gender)
master_table$semester<-as.factor(master_table$semester)
master_table$exam<-as.factor(master_table$exam)
master_table %>% spread(scoretype,total) %>%
ggplot(aes(x = pre, y = post,color=exam)) +
geom_point(aes(shape=gender)) +
facet_wrap(~semester)
View(master_table)
